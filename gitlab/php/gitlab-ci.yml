stages:
  - build
  - deploy

build-images-staging:
  stage: build
  only:
    - staging
    - tags
  tags:
    - golang
  script:
    - cp /home/gitlab-runner/env-staging .env
    - rm -rf composer.lock
    - docker build -t $REGISTRY:$ENVIRONMENT-v1.$CI_RUNNER_ID .
    - docker push $REGISTRY:$ENVIRONMENT-v1.$CI_RUNNER_ID
    - kcs $K8S_CONFIG_STAGING
    - eval "kubectl patch deploy $DEPLOY_STAGING -n core --patch '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"image\":\"$REGISTRY:$ENVIRONMENT-v1.$CI_RUNNER_ID\",\"name\":\"$DEPLOY_STAGING\"}]}}}}'"

deploy-k8s-staging:
  stage: deploy
  only:
    - staging
    - tags
  tags:
    - golang
  script: 
    - kubectl apply -f $K8S_PATH_STAGING
    - docker rmi $REGISTRY:$ENVIRONMENT-v1.$CI_RUNNER_ID

build-images-production:
  stage: build
  only:
    - master
    - tags
  tags:
    - golang
  script:
    - cp /home/gitlab-runner/env-prod .env
    - rm -rf composer.lock
    - docker build -t $REGISTRY:$ENVIRONMENT-v1.$CI_RUNNER_ID .
    - docker push $REGISTRY:$ENVIRONMENT-v1.$CI_RUNNER_ID
    - kcs $K8S_CONFIG_PRODUCTION
    - eval "kubectl patch deploy $DEPLOY_PROD -n core --patch '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"image\":\"$REGISTRY:$ENVIRONMENT-v1.$CI_RUNNER_ID\",\"name\":\"$DEPLOY_PROD\"}]}}}}'"

deploy-k8s-production:
  stage: deploy
  only:
    - master
    - tags
  tags:
    - golang
  script: 
    - kubectl apply -f $K8S_PATH_PRODUCTION
    - docker rmi $REGISTRY:$ENVIRONMENT-$CI_RUNNER_ID



